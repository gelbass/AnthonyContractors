@use 'sass:map';
@use "_variables" as *;

@mixin containers($width: 100%,$height: 100vh,$display:null,$gap:0px,$padding:0px,$justify: null,$align: null,$direction: null) {
    width: $width;
    height: $height;
    gap: $gap;
    padding: $padding !important;

    @if $display != null {
      display: $display !important;
    }

    @if $display == "flex"{
      @if $direction != null {
        flex-direction: $direction !important;
      }
      @if $justify != null {
        justify-content: $justify !important;
      }
      @if $align != null {
        align-items: $align !important;
      }
    }
}

@mixin container_img($url) {
  background-image: url($url);
  background-size: cover;
  background-position: center;
}
@mixin text($font,$size,$color,$style:normal,$weight:400,$height:normal){
    font-family: $font;
    font-size: $size;
    font-style: $style;
    font-weight: $weight;
    line-height: $height;
    margin: 0px;
    color: $color !important;
    text-align: center;
}

@mixin opacidad($position,$index){
  position: absolute;
  width: 100%;  /* 100% del ancho de la ventana */
  height: 100vh;  /* 100% de la altura de la ventana */
  object-fit: cover;  /* Ajusta el SVG para cubrir todo el espacio sin deformarse */
  object-position: center;  /* Centra el SVG dentro de la ventana */
  z-index: $index;
}

@mixin respond-between($min, $max) {
    $min-width: map.get($breakpoints, $min);
    $max-width: map.get($breakpoints, $max);
    
    @if $min-width and $max-width {
      @media (min-width: #{$min-width}) and (max-width: #{$max-width}) {
        @content;
      }
    } @else {
      @warn "Uno o ambos de los puntos de quiebre '#{$min}' o '#{$max}' no existen en el mapa.";
    }
  }
